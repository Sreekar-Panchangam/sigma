# Generated by Django 4.2.4 on 2023-08-13 12:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("workorder", "0003_remove_hoistworkorder_notes_10_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="HoistInformationSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("serial_number", models.CharField(max_length=100, unique=True)),
                ("dispatch_date", models.DateField()),
                ("gearbox_stages", models.CharField(max_length=100)),
                (
                    "heat_treatment",
                    models.CharField(
                        choices=[
                            ("Soft Gears", "Soft Gears"),
                            ("Hardened", "Hardened"),
                        ],
                        max_length=20,
                    ),
                ),
                ("rope_drum_dia", models.CharField(max_length=100)),
                ("drum_length", models.CharField(max_length=100)),
                ("drum_pitch", models.CharField(max_length=100)),
                ("rope_guide_id", models.CharField(max_length=100)),
                ("guide_thread_depth", models.CharField(max_length=100)),
                ("guide_thread_pitch", models.CharField(max_length=100)),
                ("sheave_dia", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "no_of_sheaves",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sheave_covers",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "idler_sheave_dia",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "no_of_idler",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("hook_type", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "no_of_gear_box",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("motor_mh_serial_number", models.CharField(max_length=100)),
                ("motor_mh_make", models.CharField(max_length=100)),
                ("motor_ct_serial_number", models.CharField(max_length=100)),
                ("motor_ct_make", models.CharField(max_length=100)),
                ("brake_mh_serial_number", models.CharField(max_length=100)),
                ("brake_mh_make", models.CharField(max_length=100)),
                ("brake_ct_serial_number", models.CharField(max_length=100)),
                ("brake_ct_make", models.CharField(max_length=100)),
                ("hoisting_limit_switch_type", models.CharField(max_length=100)),
                (
                    "hoisting_limit_switch_serial_number",
                    models.CharField(max_length=100),
                ),
                ("hoisting_limit_switch_make", models.CharField(max_length=100)),
                ("ct_limit_switch_type", models.CharField(max_length=100)),
                ("ct_limit_switch_serial_number", models.CharField(max_length=100)),
                ("ct_limit_switch_make", models.CharField(max_length=100)),
                (
                    "control_panel_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_panel_make",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "pendent_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "pendent_make",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "hoist_vfd_model",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "hoist_vfd_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "hoist_vfd_make",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "ct_vfd_model",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "ct_vfd_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "ct_vfd_make",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "lt_vfd_model",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "lt_vfd_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "lt_vfd_make",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("additional_information", models.TextField()),
                ("fitter_name", models.CharField(max_length=100)),
                ("engineer_in_charge", models.CharField(max_length=100)),
                (
                    "work_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workorder.hoistworkorder",
                    ),
                ),
            ],
        ),
    ]
